--1 пункт c) совпадает с b)

SELECT Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.УЧГОД
FROM Н_ЛЮДИ JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ОТЧЕСТВО = 'Сергеевич' AND Н_СЕССИЯ.ЧЛВК_ИД > 106059;

--2 пункт не выводит ни одного тк нету  Н_ОБУЧЕНИЯ.ЧЛВК_ИД > 163484

SELECT Н_ЛЮДИ.ФАМИЛИЯ, Н_ОБУЧЕНИЯ.НЗК, Н_УЧЕНИКИ.НАЧАЛО
FROM Н_ЛЮДИ RIGHT JOIN Н_ОБУЧЕНИЯ ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД
RIGHT JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_ЛЮДИ.ИД < 152862 AND Н_ОБУЧЕНИЯ.ЧЛВК_ИД > 163484;

--3 пункт 
--Составить запрос, который ответит на вопрос, есть ли среди студентов вечерней формы обучения те, кто не имеет отчества.

--ответ
SELECT
  CASE
    WHEN COUNT(Н_ЛЮДИ.ОТЧЕСТВО IS NULL)>0 THEN 'да'
    ELSE 'нет'
  END AS ответ
FROM Н_ЛЮДИ
JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE Н_ПЛАНЫ.ФО_ИД=2 AND Н_ЛЮДИ.ОТЧЕСТВО IS NULL;

--1 - дневная 2 - вечерняя


--решение
SELECT Н_ПЛАНЫ.ФО_ИД AS ид, Н_ФОРМЫ_ОБУЧЕНИЯ.ИМЯ_В_ИМИН_ПАДЕЖЕ AS форма FROM Н_ПЛАНЫ
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE Н_ПЛАНЫ.ФО_ИД>1;

SELECT Н_УЧЕНИКИ.ЧЛВК_ИД AS ПЛАН, Н_ПЛАНЫ.ФО_ИД AS ид, Н_ФОРМЫ_ОБУЧЕНИЯ.ИМЯ_В_ИМИН_ПАДЕЖЕ AS форма FROM Н_УЧЕНИКИ
JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE Н_ПЛАНЫ.ФО_ИД>1;

SELECT Н_ЛЮДИ.ОТЧЕСТВО AS Отчество, Н_ФОРМЫ_ОБУЧЕНИЯ.ИМЯ_В_ИМИН_ПАДЕЖЕ AS форма FROM Н_ЛЮДИ
JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
WHERE Н_ПЛАНЫ.ФО_ИД>1 AND Н_ЛЮДИ.ОТЧЕСТВО IS NULL;
--нету таких но есть те кто на дневную без отчества



--4 пункт 
--В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) более 2 групп на кафедре вычислительной техники.
--Для реализации использовать подзапрос.

--ответ
SELECT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД AS Номер_плана FROM Н_ГРУППЫ_ПЛАНОВ
WHERE Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД IN (
  SELECT Н_ПЛАНЫ.ИД FROM Н_ПЛАНЫ
  JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
  WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'ВТ')
GROUP BY Номер_плана HAVING COUNT(Н_ГРУППЫ_ПЛАНОВ.ГРУППА) > 2;

--решение
--ни одного совпадения
SELECT Н_ГРУППЫ_ПЛАНОВ.ГРУППА, Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД AS Номер_плана,Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ 
FROM Н_ГРУППЫ_ПЛАНОВ
  JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
  JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'ВТ';
--для примера с ИТиП или КТиУ
SELECT Н_ГРУППЫ_ПЛАНОВ.ГРУППА, Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД AS Номер_плана,Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ 
FROM Н_ГРУППЫ_ПЛАНОВ
  JOIN Н_ПЛАНЫ ON Н_ПЛАНЫ.ИД = Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
  JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'ИТиП';


--5 пункт
--Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка не меньше средней оценк(е|и) в группе 3100.

--ответ
SELECT Н_ЛЮДИ.ИД AS НОМЕР, Н_ЛЮДИ.ИМЯ,Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО, 
ROUND(AVG(Н_ВЕДОМОСТИ.ОЦЕНКА::INTEGER), 3) AS "средняя отметка" FROM Н_УЧЕНИКИ 
JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
WHERE CAST(Н_УЧЕНИКИ.ГРУППА AS INTEGER) = 4100 AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT IN ('зачет', 'незач', 'осв', 'неявка')
GROUP BY Н_ЛЮДИ.ИД, Н_ЛЮДИ.ИМЯ,Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО
HAVING ROUND(AVG(Н_ВЕДОМОСТИ.ОЦЕНКА::INTEGER), 3) > (
  SELECT ROUND(AVG(Н_ВЕДОМОСТИ.ОЦЕНКА::INTEGER), 3) FROM Н_ВЕДОМОСТИ
  JOIN Н_ЛЮДИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
    JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
    WHERE CAST(Н_УЧЕНИКИ.ГРУППА AS INTEGER) = 3100 AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT IN ('зачет', 'незач', 'осв', 'неявка')
);

--решение
--вывод людей из 4100 группы
SELECT Н_ЛЮДИ.ИД AS НОМЕР, Н_ЛЮДИ.ИМЯ,Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ОТЧЕСТВО, Н_УЧЕНИКИ.ГРУППА AS группа FROM Н_УЧЕНИКИ 
JOIN Н_ЛЮДИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE CAST(Н_УЧЕНИКИ.ГРУППА AS INTEGER) = 4100;
--можно без CAST просто сравнивать со строко '4100'

--вывод средней отметки
SELECT Н_ЛЮДИ.ИД, Н_ЛЮДИ.ИМЯ, ROUND(AVG(Н_ВЕДОМОСТИ.ОЦЕНКА::INTEGER), 3) AS средняя_отметка FROM Н_ЛЮДИ
JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
WHERE Н_ВЕДОМОСТИ.ОЦЕНКА NOT IN ('зачет', 'незач', 'осв', 'неявка')
GROUP BY Н_ЛЮДИ.ИД, Н_ЛЮДИ.ИМЯ;

--средняя отметка 3100
SELECT ROUND(AVG(Н_ВЕДОМОСТИ.ОЦЕНКА::INTEGER), 3) FROM Н_ВЕДОМОСТИ
 JOIN Н_ЛЮДИ ON Н_ВЕДОМОСТИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
 JOIN Н_УЧЕНИКИ ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
 WHERE CAST(Н_УЧЕНИКИ.ГРУППА AS INTEGER) = 3100 AND Н_ВЕДОМОСТИ.ОЦЕНКА NOT IN ('зачет', 'незач', 'осв', 'неявка');

--6 пункт
--Получить список студентов, зачисленных до первого сентября 2012 года на первый курс очной формы обучения (специальность: 230101). В результат включить:
--номер группы;
--номер, фамилию, имя и отчество студента;
--номер и состояние пункта приказа;
--Для реализации использовать подзапрос с EXISTS.

--AND - тот же WHERE только в одном предложеннии с JOIN

--ответ
SELECT УЧЕНИКИ.ГРУППА AS группа, УЧЕНИКИ.ИД AS номер,
	   Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО,
	   УЧЕНИКИ.П_ПРКОК_ИД AS приказ, УЧЕНИКИ.ПРИЗНАК AS пруф
FROM Н_УЧЕНИКИ AS УЧЕНИКИ
JOIN Н_ЛЮДИ ON УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
JOIN Н_ПЛАНЫ ON УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД AND Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ ON Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
JOIN Н_НАПР_СПЕЦ ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = Н_НАПР_СПЕЦ.ИД AND Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101'
WHERE EXISTS (
    SELECT Н_УЧЕНИКИ.ПРИЗНАК, Н_УЧЕНИКИ.КОНЕЦ, Н_УЧЕНИКИ.ИД
    FROM Н_УЧЕНИКИ
    WHERE Н_УЧЕНИКИ.ПРИЗНАК = 'отчисл'
	  AND Н_УЧЕНИКИ.ИД = УЧЕНИКИ.ИД
      AND DATE(Н_УЧЕНИКИ.КОНЕЦ) < '2012-09-01');
	  
--решение
--почему надо добавлять УЧЕНИКИ? тк надо проверять айдишник
SELECT Н_УЧЕНИКИ.ГРУППА AS группа, Н_УЧЕНИКИ.ИД AS номер,
	   Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ИМЯ, Н_ЛЮДИ.ОТЧЕСТВО,
	   Н_УЧЕНИКИ.П_ПРКОК_ИД AS приказ, Н_УЧЕНИКИ.ПРИЗНАК AS пруф
FROM Н_УЧЕНИКИ
JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД AND Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ ON Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
JOIN Н_НАПР_СПЕЦ ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = Н_НАПР_СПЕЦ.ИД AND Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101'
WHERE EXISTS (
    SELECT Н_УЧЕНИКИ.ПРИЗНАК, Н_УЧЕНИКИ.КОНЕЦ, Н_УЧЕНИКИ.ИД
    FROM Н_УЧЕНИКИ
    WHERE Н_УЧЕНИКИ.ПРИЗНАК = 'отчисл'
      AND DATE(Н_УЧЕНИКИ.КОНЕЦ) < '2012-09-01');
--пример тогда выведет вообще всех учеников(

--count
SELECT COUNT(*)
FROM Н_УЧЕНИКИ AS УЧЕНИКИ
JOIN Н_ЛЮДИ ON УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
JOIN Н_ПЛАНЫ ON УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ФОРМЫ_ОБУЧЕНИЯ ON Н_ПЛАНЫ.ФО_ИД = Н_ФОРМЫ_ОБУЧЕНИЯ.ИД AND Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная'
JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ ON Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
JOIN Н_НАПР_СПЕЦ ON Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД = Н_НАПР_СПЕЦ.ИД AND Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101'
WHERE EXISTS (
    SELECT ОТЧИСЛЕННЫЕ.ПРИЗНАК, ОТЧИСЛЕННЫЕ.КОНЕЦ, ОТЧИСЛЕННЫЕ.ИД
    FROM Н_УЧЕНИКИ ОТЧИСЛЕННЫЕ
    WHERE ОТЧИСЛЕННЫЕ.ПРИЗНАК = 'отчисл'
	  AND ОТЧИСЛЕННЫЕ.ИД = УЧЕНИКИ.ИД
      AND DATE(ОТЧИСЛЕННЫЕ.КОНЕЦ) < '2012-09-01');

--пункт 7
--Вывести список людей, не являющихся или не являвшихся студентами СПбГУ ИТМО (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ). В запросе нельзя использовать DISTINCT.
--Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = СПбГУИТМО

SELECT Не_Студенты.ИД, Не_Студенты.ИМЯ, Не_Студенты.ФАМИЛИЯ, Не_Студенты.ОТЧЕСТВО
FROM Н_ЛЮДИ AS Не_Студенты
WHERE NOT EXISTS (
	SELECT Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ, Н_УЧЕНИКИ.ИД
	FROM Н_УЧЕНИКИ
	JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
	WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'СПбГУИТМО' AND Н_УЧЕНИКИ.ЧЛВК_ИД = Не_Студенты.ИД
);
--на СПбГУИТМО и так ни одного ученика по этому используем КТиУ для примера

--count
SELECT COUNT(*)
FROM Н_ЛЮДИ AS Не_Студенты
WHERE NOT EXISTS (
	SELECT Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ, Н_УЧЕНИКИ.ИД
	FROM Н_УЧЕНИКИ
	JOIN Н_ПЛАНЫ ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД = Н_ОТДЕЛЫ.ИД
	WHERE Н_ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ' AND Н_УЧЕНИКИ.ЧЛВК_ИД = Не_Студенты.ИД
);

